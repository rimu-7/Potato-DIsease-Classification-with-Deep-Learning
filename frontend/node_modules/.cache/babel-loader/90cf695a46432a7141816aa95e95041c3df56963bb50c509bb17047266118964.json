{"ast":null,"code":"var _jsxFileName = \"C:\\\\ok\\\\potato\\\\frontend\\\\src\\\\home.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Button from \"@material-ui/core/Button\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { DropzoneArea } from \"material-ui-dropzone\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport PrintIcon from \"@material-ui/icons/Print\";\nimport image from \"./bg.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ColorButton = withStyles(theme => ({\n  root: {\n    color: theme.palette.getContrastText(theme.palette.common.white),\n    backgroundColor: theme.palette.common.white,\n    \"&:hover\": {\n      backgroundColor: \"#ffffff7a\"\n    }\n  }\n}))(Button);\n_c = ColorButton;\nconst useStyles = makeStyles(theme => ({\n  grow: {\n    flexGrow: 1\n  },\n  clearButton: {\n    width: \"-webkit-fill-available\",\n    borderRadius: \"15px\",\n    padding: \"15px 22px\",\n    color: \"#000000a6\",\n    fontSize: \"20px\",\n    fontWeight: 900\n  },\n  root: {\n    maxWidth: 345,\n    flexGrow: 1\n  },\n  media: {\n    height: 400\n  },\n  paper: {\n    padding: theme.spacing(2),\n    margin: \"auto\",\n    maxWidth: 500\n  },\n  gridContainer: {\n    justifyContent: \"center\",\n    padding: \"4em 1em 0 1em\"\n  },\n  mainContainer: {\n    backgroundImage: `url(${image})`,\n    backgroundRepeat: \"no-repeat\",\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    height: \"93vh\",\n    marginTop: \"8px\"\n  },\n  imageCard: {\n    margin: \"auto\",\n    maxWidth: 400,\n    height: 500,\n    backgroundColor: \"transparent\",\n    boxShadow: \"0px 9px 70px 0px rgb(0 0 0 / 30%) !important\",\n    borderRadius: \"15px\"\n  },\n  imageCardEmpty: {\n    height: \"auto\"\n  },\n  noImage: {\n    margin: \"auto\",\n    width: 400,\n    height: \"400 !important\"\n  },\n  input: {\n    display: \"none\"\n  },\n  uploadIcon: {\n    background: \"white\"\n  },\n  tableContainer: {\n    backgroundColor: \"transparent !important\",\n    boxShadow: \"none !important\"\n  },\n  table: {\n    backgroundColor: \"transparent !important\"\n  },\n  tableHead: {\n    backgroundColor: \"transparent !important\"\n  },\n  tableRow: {\n    backgroundColor: \"transparent !important\"\n  },\n  tableCell: {\n    fontSize: \"22px\",\n    backgroundColor: \"transparent !important\",\n    borderColor: \"transparent !important\",\n    color: \"#000000a6 !important\",\n    fontWeight: \"bolder\",\n    padding: \"1px 24px 1px 16px\"\n  },\n  tableCell1: {\n    fontSize: \"14px\",\n    backgroundColor: \"transparent !important\",\n    borderColor: \"transparent !important\",\n    color: \"#000000a6 \",\n    fontWeight: \"bolder\",\n    padding: \"1px 24px 1px 16px\"\n  },\n  tableBody: {\n    backgroundColor: \"#FFFF \"\n  },\n  text: {\n    color: \"white !important\",\n    textAlign: \"center\"\n  },\n  buttonGrid: {\n    maxWidth: \"416px\",\n    width: \"100%\"\n  },\n  detail: {\n    backgroundColor: \"white\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  appbar: {\n    background: \"#be6a77\",\n    boxShadow: \"none\",\n    color: \"white\"\n  },\n  loader: {\n    color: \"#be6a77 !important\"\n  }\n}));\nconst ImageUpload = () => {\n  _s();\n  const classes = useStyles();\n  const [selectedFile, setSelectedFile] = useState();\n  const [preview, setPreview] = useState();\n  const [data, setData] = useState();\n  const [image, setImage] = useState(false);\n  const [isLoading, setIsloading] = useState(false);\n  let confidence = 0;\n  const sendFile = async () => {\n    try {\n      if (image) {\n        let formData = new FormData();\n        formData.append(\"file\", selectedFile);\n        console.log(\"Request Data:\", formData);\n        let res = await axios({\n          method: \"post\",\n          url: process.env.REACT_APP_API_URL,\n          data: formData,\n          timeout: 5000\n        });\n        console.log(\"Full Response:\", res);\n        if (res.status === 200 && res.data) {\n          await savePredictionToDatabase(res.data);\n          setData(res.data);\n        }\n        setIsloading(false);\n      }\n    } catch (error) {\n      console.error(\"Axios Error:\", error);\n      setIsloading(false);\n    }\n  };\n  const savePredictionToDatabase = async predictionData => {\n    try {\n      const res = await axios.post(\"/savePrediction\", predictionData);\n      console.log(\"Prediction saved to database:\", res.data);\n    } catch (error) {\n      console.error(\"Error saving prediction to database:\", error);\n    }\n  };\n  const clearData = () => {\n    console.log(\"Clearing data...\");\n    setData(null);\n    setImage(false);\n    setSelectedFile(null);\n    setPreview(null);\n  };\n  const onSelectFile = files => {\n    if (!files || files.length === 0) {\n      setSelectedFile(undefined);\n      setImage(false);\n      setData(undefined);\n      return;\n    }\n    setSelectedFile(files[0]);\n    setData(undefined);\n    setImage(true);\n  };\n  if (data) {\n    confidence = (parseFloat(data.confidence) * 100).toFixed(2);\n  }\n  const handlePrint = () => {\n    window.print();\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      className: classes.appbar,\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.title,\n          variant: \"h6\",\n          noWrap: true,\n          children: \"Potato Disease Classification\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.grow\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handlePrint,\n          color: \"inherit\",\n          startIcon: /*#__PURE__*/_jsxDEV(PrintIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 24\n          }, this),\n          children: \"Print\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: false,\n      className: classes.mainContainer,\n      disableGutters: true,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        className: classes.gridContainer,\n        container: true,\n        direction: \"row\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: `${classes.imageCard} ${!image ? classes.imageCardEmpty : \"\"}`,\n            children: [image && /*#__PURE__*/_jsxDEV(CardActionArea, {\n              children: /*#__PURE__*/_jsxDEV(CardMedia, {\n                className: classes.media,\n                image: preview,\n                component: \"image\",\n                title: \"Contemplative Reptile\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 17\n            }, this), !image && /*#__PURE__*/_jsxDEV(CardContent, {\n              className: classes.content,\n              children: /*#__PURE__*/_jsxDEV(DropzoneArea, {\n                acceptedFiles: [\"image/*\"],\n                dropzoneText: \"Drag and drop an image of a potato plant leaf to process\",\n                onChange: onSelectFile\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 17\n            }, this), data && /*#__PURE__*/_jsxDEV(CardContent, {\n              className: classes.detail,\n              children: /*#__PURE__*/_jsxDEV(TableContainer, {\n                component: Paper,\n                className: classes.tableContainer,\n                children: /*#__PURE__*/_jsxDEV(Table, {\n                  className: classes.table,\n                  size: \"small\",\n                  \"aria-label\": \"simple table\",\n                  children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                    className: classes.tableHead,\n                    children: /*#__PURE__*/_jsxDEV(TableRow, {\n                      className: classes.tableRow,\n                      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                        className: classes.tableCell1,\n                        children: \"Label:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 296,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        align: \"right\",\n                        className: classes.tableCell1,\n                        children: \"Confidence:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 299,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 295,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 294,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                    className: classes.tableBody,\n                    children: /*#__PURE__*/_jsxDEV(TableRow, {\n                      className: classes.tableRow,\n                      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                        component: \"th\",\n                        scope: \"row\",\n                        className: classes.tableCell,\n                        children: data.class\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 309,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        align: \"right\",\n                        className: classes.tableCell,\n                        children: [confidence, \"%\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 316,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 308,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 307,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 17\n            }, this), isLoading && /*#__PURE__*/_jsxDEV(CardContent, {\n              className: classes.detail,\n              children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n                color: \"secondary\",\n                className: classes.loader\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.title,\n                variant: \"h6\",\n                noWrap: true,\n                children: \"Processing\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this), data && /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          className: classes.buttonGrid,\n          children: /*#__PURE__*/_jsxDEV(ColorButton, {\n            variant: \"contained\",\n            className: classes.clearButton,\n            color: \"primary\",\n            component: \"span\",\n            size: \"large\",\n            onClick: clearData,\n            startIcon: /*#__PURE__*/_jsxDEV(Clear, {\n              fontSize: \"large\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 28\n            }, this),\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageUpload, \"pSc+z8Z4rZ3myJ6s+KmvL71J49Q=\", false, function () {\n  return [useStyles];\n});\n_c2 = ImageUpload;\nexport default ImageUpload;\nexport { ImageUpload };\nvar _c, _c2;\n$RefreshReg$(_c, \"ColorButton\");\n$RefreshReg$(_c2, \"ImageUpload\");","map":{"version":3,"names":["React","useState","axios","makeStyles","withStyles","AppBar","Toolbar","Typography","Container","Card","CardContent","CardActionArea","CardMedia","Grid","TableContainer","Paper","Table","TableHead","TableBody","TableRow","TableCell","Button","CircularProgress","DropzoneArea","Clear","PrintIcon","image","jsxDEV","_jsxDEV","ColorButton","theme","root","color","palette","getContrastText","common","white","backgroundColor","_c","useStyles","grow","flexGrow","clearButton","width","borderRadius","padding","fontSize","fontWeight","maxWidth","media","height","paper","spacing","margin","gridContainer","justifyContent","mainContainer","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","marginTop","imageCard","boxShadow","imageCardEmpty","noImage","input","display","uploadIcon","background","tableContainer","table","tableHead","tableRow","tableCell","borderColor","tableCell1","tableBody","text","textAlign","buttonGrid","detail","flexDirection","alignItems","appbar","loader","ImageUpload","_s","classes","selectedFile","setSelectedFile","preview","setPreview","data","setData","setImage","isLoading","setIsloading","confidence","sendFile","formData","FormData","append","console","log","res","method","url","process","env","REACT_APP_API_URL","timeout","status","savePredictionToDatabase","error","predictionData","post","clearData","onSelectFile","files","length","undefined","parseFloat","toFixed","handlePrint","window","print","Fragment","children","position","className","title","variant","noWrap","fileName","_jsxFileName","lineNumber","columnNumber","onClick","startIcon","disableGutters","container","direction","item","xs","component","content","acceptedFiles","dropzoneText","onChange","size","align","scope","class","_c2","$RefreshReg$"],"sources":["C:/ok/potato/frontend/src/home.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { DropzoneArea } from \"material-ui-dropzone\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\nimport image from \"./bg.png\";\r\n\r\nconst ColorButton = withStyles((theme) => ({\r\n  root: {\r\n    color: theme.palette.getContrastText(theme.palette.common.white),\r\n    backgroundColor: theme.palette.common.white,\r\n    \"&:hover\": {\r\n      backgroundColor: \"#ffffff7a\",\r\n    },\r\n  },\r\n}))(Button);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  clearButton: {\r\n    width: \"-webkit-fill-available\",\r\n    borderRadius: \"15px\",\r\n    padding: \"15px 22px\",\r\n    color: \"#000000a6\",\r\n    fontSize: \"20px\",\r\n    fontWeight: 900,\r\n  },\r\n  root: {\r\n    maxWidth: 345,\r\n    flexGrow: 1,\r\n  },\r\n  media: {\r\n    height: 400,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    margin: \"auto\",\r\n    maxWidth: 500,\r\n  },\r\n  gridContainer: {\r\n    justifyContent: \"center\",\r\n    padding: \"4em 1em 0 1em\",\r\n  },\r\n  mainContainer: {\r\n    backgroundImage: `url(${image})`,\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundPosition: \"center\",\r\n    backgroundSize: \"cover\",\r\n    height: \"93vh\",\r\n    marginTop: \"8px\",\r\n  },\r\n  imageCard: {\r\n    margin: \"auto\",\r\n    maxWidth: 400,\r\n    height: 500,\r\n    backgroundColor: \"transparent\",\r\n    boxShadow: \"0px 9px 70px 0px rgb(0 0 0 / 30%) !important\",\r\n    borderRadius: \"15px\",\r\n  },\r\n  imageCardEmpty: {\r\n    height: \"auto\",\r\n  },\r\n  noImage: {\r\n    margin: \"auto\",\r\n    width: 400,\r\n    height: \"400 !important\",\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  uploadIcon: {\r\n    background: \"white\",\r\n  },\r\n  tableContainer: {\r\n    backgroundColor: \"transparent !important\",\r\n    boxShadow: \"none !important\",\r\n  },\r\n  table: {\r\n    backgroundColor: \"transparent !important\",\r\n  },\r\n  tableHead: {\r\n    backgroundColor: \"transparent !important\",\r\n  },\r\n  tableRow: {\r\n    backgroundColor: \"transparent !important\",\r\n  },\r\n  tableCell: {\r\n    fontSize: \"22px\",\r\n    backgroundColor: \"transparent !important\",\r\n    borderColor: \"transparent !important\",\r\n    color: \"#000000a6 !important\",\r\n    fontWeight: \"bolder\",\r\n    padding: \"1px 24px 1px 16px\",\r\n  },\r\n  tableCell1: {\r\n    fontSize: \"14px\",\r\n    backgroundColor: \"transparent !important\",\r\n    borderColor: \"transparent !important\",\r\n    color: \"#000000a6 \",\r\n    fontWeight: \"bolder\",\r\n    padding: \"1px 24px 1px 16px\",\r\n  },\r\n  tableBody: {\r\n    backgroundColor: \"#FFFF \",\r\n  },\r\n  text: {\r\n    color: \"white !important\",\r\n    textAlign: \"center\",\r\n  },\r\n  buttonGrid: {\r\n    maxWidth: \"416px\",\r\n    width: \"100%\",\r\n  },\r\n  detail: {\r\n    backgroundColor: \"white\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  appbar: {\r\n    background: \"#be6a77\",\r\n    boxShadow: \"none\",\r\n    color: \"white\",\r\n  },\r\n  loader: {\r\n    color: \"#be6a77 !important\",\r\n  },\r\n}));\r\n\r\nconst ImageUpload = () => {\r\n  const classes = useStyles();\r\n  const [selectedFile, setSelectedFile] = useState();\r\n  const [preview, setPreview] = useState();\r\n  const [data, setData] = useState();\r\n  const [image, setImage] = useState(false);\r\n  const [isLoading, setIsloading] = useState(false);\r\n  let confidence = 0;\r\n\r\n  const sendFile = async () => {\r\n    try {\r\n      if (image) {\r\n        let formData = new FormData();\r\n        formData.append(\"file\", selectedFile);\r\n        console.log(\"Request Data:\", formData);\r\n\r\n        let res = await axios({\r\n          method: \"post\",\r\n          url: process.env.REACT_APP_API_URL,\r\n          data: formData,\r\n          timeout: 5000,\r\n        });\r\n\r\n        console.log(\"Full Response:\", res);\r\n\r\n        if (res.status === 200 && res.data) {\r\n          await savePredictionToDatabase(res.data);\r\n          setData(res.data);\r\n        }\r\n        setIsloading(false);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Axios Error:\", error);\r\n      setIsloading(false);\r\n    }\r\n  };\r\n\r\n  const savePredictionToDatabase = async (predictionData) => {\r\n    try {\r\n      const res = await axios.post(\"/savePrediction\", predictionData);\r\n      console.log(\"Prediction saved to database:\", res.data);\r\n    } catch (error) {\r\n      console.error(\"Error saving prediction to database:\", error);\r\n    }\r\n  };\r\n\r\n  const clearData = () => {\r\n    console.log(\"Clearing data...\");\r\n    setData(null);\r\n    setImage(false);\r\n    setSelectedFile(null);\r\n    setPreview(null);\r\n  };\r\n\r\n  const onSelectFile = (files) => {\r\n    if (!files || files.length === 0) {\r\n      setSelectedFile(undefined);\r\n      setImage(false);\r\n      setData(undefined);\r\n      return;\r\n    }\r\n    setSelectedFile(files[0]);\r\n    setData(undefined);\r\n    setImage(true);\r\n  };\r\n\r\n  if (data) {\r\n    confidence = (parseFloat(data.confidence) * 100).toFixed(2);\r\n  }\r\n\r\n  const handlePrint = () => {\r\n    window.print();\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <AppBar position=\"static\" className={classes.appbar}>\r\n        <Toolbar>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            Potato Disease Classification\r\n          </Typography>\r\n          <div className={classes.grow} />\r\n          <Button\r\n            onClick={handlePrint}\r\n            color=\"inherit\"\r\n            startIcon={<PrintIcon />}\r\n          >\r\n            Print\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Container\r\n        maxWidth={false}\r\n        className={classes.mainContainer}\r\n        disableGutters={true}\r\n      >\r\n        <Grid\r\n          className={classes.gridContainer}\r\n          container\r\n          direction=\"row\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          spacing={2}\r\n        >\r\n          <Grid item xs={12}>\r\n            <Card\r\n              className={`${classes.imageCard} ${\r\n                !image ? classes.imageCardEmpty : \"\"\r\n              }`}\r\n            >\r\n              {image && (\r\n                <CardActionArea>\r\n                  <CardMedia\r\n                    className={classes.media}\r\n                    image={preview}\r\n                    component=\"image\"\r\n                    title=\"Contemplative Reptile\"\r\n                  />\r\n                </CardActionArea>\r\n              )}\r\n              {!image && (\r\n                <CardContent className={classes.content}>\r\n                  <DropzoneArea\r\n                    acceptedFiles={[\"image/*\"]}\r\n                    dropzoneText={\r\n                      \"Drag and drop an image of a potato plant leaf to process\"\r\n                    }\r\n                    onChange={onSelectFile}\r\n                  />\r\n                </CardContent>\r\n              )}\r\n              {data && (\r\n                <CardContent className={classes.detail}>\r\n                  <TableContainer\r\n                    component={Paper}\r\n                    className={classes.tableContainer}\r\n                  >\r\n                    <Table\r\n                      className={classes.table}\r\n                      size=\"small\"\r\n                      aria-label=\"simple table\"\r\n                    >\r\n                      <TableHead className={classes.tableHead}>\r\n                        <TableRow className={classes.tableRow}>\r\n                          <TableCell className={classes.tableCell1}>\r\n                            Label:\r\n                          </TableCell>\r\n                          <TableCell\r\n                            align=\"right\"\r\n                            className={classes.tableCell1}\r\n                          >\r\n                            Confidence:\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      </TableHead>\r\n                      <TableBody className={classes.tableBody}>\r\n                        <TableRow className={classes.tableRow}>\r\n                          <TableCell\r\n                            component=\"th\"\r\n                            scope=\"row\"\r\n                            className={classes.tableCell}\r\n                          >\r\n                            {data.class}\r\n                          </TableCell>\r\n                          <TableCell\r\n                            align=\"right\"\r\n                            className={classes.tableCell}\r\n                          >\r\n                            {confidence}%\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                </CardContent>\r\n              )}\r\n\r\n              {isLoading && (\r\n                <CardContent className={classes.detail}>\r\n                  <CircularProgress\r\n                    color=\"secondary\"\r\n                    className={classes.loader}\r\n                  />\r\n                  <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                    Processing\r\n                  </Typography>\r\n                </CardContent>\r\n              )}\r\n            </Card>\r\n          </Grid>\r\n          {data && (\r\n            <Grid item className={classes.buttonGrid}>\r\n              <ColorButton\r\n                variant=\"contained\"\r\n                className={classes.clearButton}\r\n                color=\"primary\"\r\n                component=\"span\"\r\n                size=\"large\"\r\n                onClick={clearData}\r\n                startIcon={<Clear fontSize=\"large\" />}\r\n              >\r\n                Clear\r\n              </ColorButton>\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n\r\nexport { ImageUpload };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}